export declare type ModalFooterText = {
    text: string;
    color?: string;
    key?: string;
};
export declare type ModalFooterCallback = (key: string) => void | boolean;
export declare type ModalFooterLayout = 'inline' | 'block';
export interface ModalOptions {
    title?: string;
    content?: string;
    footerTexts?: ModalFooterText[];
    callback?: ModalFooterCallback;
    footerLayout?: ModalFooterLayout;
    parent?: Element;
    wrapClass?: string;
    width?: string;
    maskCanClose?: boolean;
    animation?: 'fade' | string;
}
export declare class Modal {
    parent: Element;
    wrap: Element | null;
    footer: Element | null;
    overlay: Element | null;
    isHiding: boolean;
    options: ModalOptions;
    constructor();
    initOptions(): void;
    show(options: ModalOptions): void;
    generateHTML(): void;
    onEventListener(): void;
    offEventListener(): void;
    footerHandler(e: Event): void;
    maskHandler(): void;
    hide(callback?: () => void): void;
}
