export declare type ToastIconType = 'success' | 'error' | 'warning' | 'custom' | 'none';
export declare type ToastIconMap = Record<ToastIconType, string>;
export declare type ToastPlace = 'top' | 'center' | 'bottom';
export declare type ToastLayout = 'inline' | 'block';
export declare type ToastAnimation = 'fade' | 'down' | 'up' | string;
export interface ToastOptions {
    icon?: ToastIconType;
    iconUrl?: string;
    title?: string;
    mask?: boolean;
    duration?: number;
    parent?: Element;
    wrapClass?: string;
    maxWidth?: string;
    place?: ToastPlace;
    offset?: string;
    layout?: ToastLayout;
    animation?: ToastAnimation;
}
export declare class Toast {
    parent: Element;
    wrap: Element | null;
    iconMap: ToastIconMap;
    isHiding: boolean;
    options: ToastOptions;
    constructor();
    initOptions(): void;
    show(options: ToastOptions): void;
    hide(callback?: () => void): void;
    generateHTML(): void;
}
